type Transaction @model {
  id: String!
  agent: Agent! @connection(name: "AgentTransaction")
  device: Device! @connection(name: "DeviceTransaction")
  item: Item! @connection(name: "TransactionItem")
  customer: Customer! @connection(name: "CustomerTransaction")
  amount: String!
  quantity: String!
  date: String!
  timeStamp: String!
}

type Agent @model {
  id: String!
  name: String!
  customers: [Customer] @connection(name: "CustomerAgent")
  Transactions: [Transaction] @connection(name: "AgentTransaction")
  Organization: Organization! @connection(name: "AgentOrganization")
  email: String
  password: String!
  phone: String!
  type: String!
}

type Device @model {
  id: String!
  Transactions: [Transaction] @connection(name: "DeviceTransaction")
  items: [Item] @connection(name: "DeviceItem")
  Organization: Organization! @connection(name: "DeviceOrganization")
  name: String!
  deviceId: String!
  location: String!
  lga: String
  state: String
  community: String
}

type Item @model {
  id: String!
  code: String!
  device: Device! @connection(name: "DeviceItem")
  Transactions: [Transaction] @connection(name: "TransactionItem")
  category: String!
  name: String!
  measure: String!
  unit: String
  withQuantity: Boolean!
  withFromTo: Boolean!
}

type Customer @model {
  id: String!
  name: String!
  agent: Agent @connection(name: "CustomerAgent")
  transactions: [Transaction] @connection(name: "CustomerTransaction")
  phone: String!
  code: String!
}
type ApiUser @model {
  id: String!
  apiKey: String!
  apiUsername: String!
  role: String!
}

type Organization @model{
  id: String!
  Agents: [Agent] @connection(name: "AgentOrganization")
  Devices: [Device] @connection(name: "DeviceOrganization")
  name: String!
  description: String
  logoUrl: String!
  phone: String!
}
